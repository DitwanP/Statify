{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Dev/Statify/statify/client/src/components/Playlists.js\";\nimport React, { Component } from 'react';\nimport { motion } from \"framer-motion\";\nimport '../styles/Playlists.scss';\nimport { getPlaylists } from '../spotify';\nimport { catchErrors } from '../utils';\nimport Loader from './Loader';\nconst pageVariants = {\n  in: {\n    y: [\"100vh\", \"100vh\", \"0vh\", \"0vh\"]\n  },\n  notIn: {\n    y: \"100vh\"\n  },\n  outDown: {\n    y: [\"0vh\", \"0vh\", \"100vh\"]\n  }\n};\nconst pageTransitions = {\n  type: \"tween\",\n  ease: \"easeInOut\",\n  duration: 0.75\n};\nexport default class Playlists extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playlists: null\n    };\n  }\n\n  componentDidMount() {\n    catchErrors(this.getData());\n  }\n\n  async getData() {\n    const {\n      data\n    } = await getPlaylists();\n    this.setState({\n      playlists: data\n    });\n  }\n\n  render() {\n    const {\n      playlists\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: playlists ? /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"background\",\n        variants: pageVariants,\n        initial: \"notIn\",\n        animate: \"in\",\n        exit: \"outDown\",\n        transition: pageTransitions,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playlists\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-container\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Your Playlists\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"users-playlists-container\",\n            children: playlists.items.map((playlist, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playlist-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: playlist.external_urls.spotify,\n                className: \"playlist-image\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: playlist.images[0].url,\n                  alt: \"playlist thumbnail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: playlist.external_urls.spotify,\n                className: \"playlist-name\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: [\" \", playlist.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\" \", playlist.tracks.total, \" SONGS \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/c/Dev/Statify/statify/client/src/components/Playlists.js"],"names":["React","Component","motion","getPlaylists","catchErrors","Loader","pageVariants","in","y","notIn","outDown","pageTransitions","type","ease","duration","Playlists","state","playlists","componentDidMount","getData","data","setState","render","items","map","playlist","index","external_urls","spotify","images","url","name","tracks","total"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { motion } from \"framer-motion\";\nimport '../styles/Playlists.scss';\nimport { getPlaylists } from '../spotify';\nimport { catchErrors } from '../utils';\nimport Loader from './Loader';\n\nconst pageVariants = { \n    in:{ \n        y: [\"100vh\", \"100vh\", \"0vh\", \"0vh\"],\n    },\n    notIn: {\n        y: \"100vh\",\n    },\n    outDown: {\n        y: [\"0vh\", \"0vh\", \"100vh\"],\n    }\n}\n\nconst pageTransitions = { \n    type: \"tween\",\n    ease: \"easeInOut\",\n    duration: 0.75,\n}\n\n\nexport default class Playlists extends Component {\n\n    state = {\n        playlists: null,\n    };\n\n    componentDidMount() {\n        catchErrors(this.getData());\n    }\n\n    async getData() {\n        const { data } = await getPlaylists();\n        this.setState({ playlists: data });\n    }  \n\n    render() {\n        const { playlists } = this.state;\n\n        return (\n            <React.Fragment>\n                { playlists ? (\n                    <motion.div className=\"background\"\n                    variants={pageVariants}\n                    initial=\"notIn\"\n                    animate=\"in\"\n                    exit=\"outDown\"\n                    transition={pageTransitions}>\n                        <div className=\"playlists\">\n                            <div className=\"header-container\">\n                                <h1>Your Playlists</h1>\n                            </div>\n                            <div className=\"users-playlists-container\">\n                                {playlists.items.map((playlist, index) => \n                                    <div key={index} className=\"playlist-item\">\n                                        <a href={playlist.external_urls.spotify} className=\"playlist-image\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <img src={playlist.images[0].url} alt=\"playlist thumbnail\"/>\n                                        </a>\n                                        <a href={playlist.external_urls.spotify} className=\"playlist-name\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                            <h1> {playlist.name} </h1>\n                                        </a>\n                                        <h2> {playlist.tracks.total} SONGS </h2>\n                                    </div>\n                                )}\n                            </div>\n                        </div> \n                    </motion.div>\n                ) : (\n                    <Loader />\n                )}\n            </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}