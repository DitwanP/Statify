{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/mnt/c/Dev/Statify/statify/client/src/components/Profile.js\";\nimport React, { Component } from 'react';\nimport Loader from './Loader';\nimport { motion } from 'framer-motion';\nimport { catchErrors } from '../utils';\nimport { getUserInfo, getTopSongsAndArtists } from '../spotify';\nimport '../styles/Profile.scss';\nconst pageVariants = {\n  in: {\n    y: [\"100vh\", \"100vh\", \"0vh\", \"0vh\"]\n  },\n  notIn: {\n    y: \"100vh\"\n  },\n  outDown: {\n    y: [\"0vh\", \"0vh\", \"100vh\"]\n  }\n};\nconst pageTransitions = {\n  type: \"tween\",\n  ease: \"easeInOut\",\n  duration: 0.75\n};\n\nconst RangeButton = _styled.button.withConfig({\n  displayName: \"Profile__RangeButton\",\n  componentId: \"liofhb-0\"\n})([\"background-color:transparent;color:\", \";font-size:18px;font-weight:500;margin:0rem 0.5rem;outline:none;border:none;span{padding-bottom:2px;border-bottom:1px solid \", \";line-height:1.5;white-space:nowrap;}\"], props => props.isActive ? '#f0f0f0' : '#999999', props => props.isActive ? '#f0f0f0' : `transparent`);\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      followedArtists: null,\n      playlists: null,\n      artistsLong: null,\n      artistsMedium: null,\n      artistsShort: null,\n      songsLong: null,\n      songsMedium: null,\n      songsShort: null,\n      topTracksData: null,\n      topArtistsData: null,\n      activeRange: 'long',\n      artistsActiveRange: 'artistsMedium',\n      makeSongsVisible: true,\n      makeArtistsVisible: false\n    };\n\n    this.viewSongsTab = () => catchErrors(this.toSongsTab());\n\n    this.viewArtistsTab = () => catchErrors(this.toArtistsTab());\n\n    this.setActiveRange = range => catchErrors(this.changeRange(range));\n\n    this.setActiveRangeArtists = range => catchErrors(this.changeRangeArtists(range));\n  }\n\n  componentDidMount() {\n    catchErrors(this.getData());\n  }\n\n  async getData() {\n    const {\n      user,\n      followedArtists,\n      playlists\n    } = await getUserInfo();\n    const {\n      artistsLong,\n      artistsMedium,\n      artistsShort,\n      songsLong,\n      songsMedium,\n      songsShort\n    } = await getTopSongsAndArtists();\n    this.setState({\n      user,\n      followedArtists,\n      playlists,\n      artistsLong,\n      artistsMedium,\n      artistsShort,\n      songsLong,\n      songsMedium,\n      songsShort,\n      topTracksData: songsLong,\n      topArtistsData: artistsLong\n    });\n  }\n\n  async toSongsTab() {\n    this.setState({\n      makeSongsVisible: true,\n      makeArtistsVisible: false\n    });\n  }\n\n  async toArtistsTab() {\n    this.setState({\n      makeSongsVisible: false,\n      makeArtistsVisible: true\n    });\n  }\n\n  async changeRange(range) {\n    if (range === 'long') {\n      const data = this.state.songsLong;\n      this.setState({\n        topTracksData: data,\n        activeRange: range\n      });\n    } else if (range === 'medium') {\n      const data = this.state.songsMedium;\n      this.setState({\n        topTracksData: data,\n        activeRange: range\n      });\n    } else if (range === 'short') {\n      const data = this.state.songsShort;\n      this.setState({\n        topTracksData: data,\n        activeRange: range\n      });\n    }\n  }\n\n  async changeRangeArtists(range) {\n    if (range === 'artistsLong') {\n      const data = this.state.artistsLong;\n      this.setState({\n        topArtistsData: data,\n        artistsActiveRange: range\n      });\n    } else if (range === 'artistsMedium') {\n      const data = this.state.artistsMedium;\n      this.setState({\n        topArtistsData: data,\n        artistsActiveRange: range\n      });\n    } else if (range === 'artistsShort') {\n      const data = this.state.artistsShort;\n      this.setState({\n        topArtistsData: data,\n        artistsActiveRange: range\n      });\n    }\n  }\n\n  render() {\n    const {\n      user,\n      followedArtists,\n      playlists,\n      topArtistsData,\n      topTracksData,\n      activeRange,\n      artistsActiveRange,\n      makeSongsVisible,\n      makeArtistsVisible\n    } = this.state;\n    const totalPlaylists = playlists ? playlists.total : 0; // const tabForSongsVisibilityTest = makeSongsVisible ? 'show' : 'hide';\n    // console.log('What to do with top songs div?', tabForSongsVisibilityTest);\n    // const tabForArtistsVisibilityTest = makeArtistsVisible ? 'show' : 'hide';\n    // console.log('What to do with top artists div?', tabForArtistsVisibilityTest);\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: user ? /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"profile\",\n        variants: pageVariants,\n        initial: \"notIn\",\n        animate: \"in\",\n        exit: \"outDown\",\n        transition: pageTransitions,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-container\",\n            children: user.images.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"avatar\",\n              src: user.images[0].url,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \" NO AVATAR \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-name\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: user.external_urls.spotify,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [\" \", user.display_name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"account-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"followers\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: user.followers.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Followers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"number-of-playlists\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: totalPlaylists\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Playists\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"following\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: followedArtists.artists.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Following\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"choice-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"top-songs-button\",\n              children: /*#__PURE__*/_jsxDEV(RangeButton, {\n                className: \"top-songs-tab-button\",\n                isActive: makeSongsVisible,\n                onClick: () => this.viewSongsTab('songs'),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Top Songs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"top-artist-button\",\n              children: /*#__PURE__*/_jsxDEV(RangeButton, {\n                className: \"top-artists-tab-button\",\n                isActive: makeArtistsVisible,\n                onClick: () => this.viewArtistsTab('artists'),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Top Artists\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-songs\",\n            value: makeSongsVisible ? 'show' : 'hide',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-for-top-lists\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Top Songs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ranges\",\n                children: [/*#__PURE__*/_jsxDEV(RangeButton, {\n                  className: \"range-button-top-songs\",\n                  isActive: activeRange === 'long',\n                  onClick: () => this.setActiveRange('long'),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"All Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(RangeButton, {\n                  className: \"range-button-top-songs\",\n                  isActive: activeRange === 'medium',\n                  onClick: () => this.setActiveRange('medium'),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Last 6 Months\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(RangeButton, {\n                  className: \"range-button-top-songs\",\n                  isActive: activeRange === 'short',\n                  onClick: () => this.setActiveRange('short'),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Last Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"songs\",\n              children: topTracksData ? topTracksData.items.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"album-cover\",\n                  src: song.album.images[2].url,\n                  alt: \"album-cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"title-and-artist\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"song\",\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: song.external_urls.spotify,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                        className: \"song-title\",\n                        children: song.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"artists\",\n                    children: song.artists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: [\" \", artist.name, \" \"]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 41\n              }, this)) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top-artists\",\n            value: makeArtistsVisible ? 'show' : 'hide',\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-for-top-lists\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Top Artists\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ranges\",\n                children: [/*#__PURE__*/_jsxDEV(RangeButton, {\n                  className: \"range-button-top-artists\",\n                  isActive: artistsActiveRange === 'artistsLong',\n                  onClick: () => this.setActiveRangeArtists('artistsLong'),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"All Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(RangeButton, {\n                  className: \"range-button-top-artists\",\n                  isActive: artistsActiveRange === 'artistsMedium',\n                  onClick: () => this.setActiveRangeArtists('artistsMedium'),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Last 6 Months\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(RangeButton, {\n                  className: \"range-button-top-artists\",\n                  isActive: artistsActiveRange === 'artistsShort',\n                  onClick: () => this.setActiveRangeArtists('artistsShort'),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Last Month\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"artists\",\n              children: topArtistsData ? topArtistsData.items.map((artist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar-and-name\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"artist-avatar\",\n                    src: artist.images[2].url,\n                    alt: \"artist-avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"artist-name\",\n                    href: artist.href,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                      children: [\" \", artist.name, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popularity\",\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: [\"Popularity - \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: artist.popularity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 66\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this)) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/mnt/c/Dev/Statify/statify/client/src/components/Profile.js"],"names":["React","Component","Loader","motion","catchErrors","getUserInfo","getTopSongsAndArtists","pageVariants","in","y","notIn","outDown","pageTransitions","type","ease","duration","RangeButton","styled","button","props","isActive","Profile","state","user","followedArtists","playlists","artistsLong","artistsMedium","artistsShort","songsLong","songsMedium","songsShort","topTracksData","topArtistsData","activeRange","artistsActiveRange","makeSongsVisible","makeArtistsVisible","viewSongsTab","toSongsTab","viewArtistsTab","toArtistsTab","setActiveRange","range","changeRange","setActiveRangeArtists","changeRangeArtists","componentDidMount","getData","setState","data","render","totalPlaylists","total","images","length","url","external_urls","spotify","display_name","followers","artists","items","map","song","index","album","name","artist","href","popularity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAkD,YAAlD;AAGA,OAAO,wBAAP;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,EAAE,EAAC;AACCC,IAAAA,CAAC,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,KAAnB,EAA0B,KAA1B;AADJ,GADc;AAIjBC,EAAAA,KAAK,EAAE;AACHD,IAAAA,CAAC,EAAE;AADA,GAJU;AAOjBE,EAAAA,OAAO,EAAE;AACLF,IAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf;AADE;AAPQ,CAArB;AAYA,MAAMG,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,OADc;AAEpBC,EAAAA,IAAI,EAAE,WAFc;AAGpBC,EAAAA,QAAQ,EAAE;AAHU,CAAxB;;AAMA,MAAMC,WAAW,GAAGC,OAAM,CAACC,MAAV;AAAA;AAAA;AAAA,qNAEJC,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA6B,SAFnC,EAWkBD,KAAK,IAAKA,KAAK,CAACC,QAAN,GAAiB,SAAjB,GAA8B,aAX1D,CAAjB;;AAiBA,MAAMC,OAAN,SAAsBpB,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE5BqB,KAF4B,GAEpB;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,eAAe,EAAE,IAFb;AAGJC,MAAAA,SAAS,EAAE,IAHP;AAIJC,MAAAA,WAAW,EAAE,IAJT;AAKJC,MAAAA,aAAa,EAAE,IALX;AAMJC,MAAAA,YAAY,EAAE,IANV;AAOJC,MAAAA,SAAS,EAAE,IAPP;AAQJC,MAAAA,WAAW,EAAE,IART;AASJC,MAAAA,UAAU,EAAE,IATR;AAUJC,MAAAA,aAAa,EAAE,IAVX;AAWJC,MAAAA,cAAc,EAAE,IAXZ;AAYJC,MAAAA,WAAW,EAAE,MAZT;AAaJC,MAAAA,kBAAkB,EAAE,eAbhB;AAcJC,MAAAA,gBAAgB,EAAE,IAdd;AAeJC,MAAAA,kBAAkB,EAAE;AAfhB,KAFoB;;AAAA,SA8E5BC,YA9E4B,GA8Eb,MAAMlC,WAAW,CAAC,KAAKmC,UAAL,EAAD,CA9EJ;;AAAA,SA+E5BC,cA/E4B,GA+EX,MAAMpC,WAAW,CAAC,KAAKqC,YAAL,EAAD,CA/EN;;AAAA,SAgF5BC,cAhF4B,GAgFXC,KAAK,IAAIvC,WAAW,CAAC,KAAKwC,WAAL,CAAiBD,KAAjB,CAAD,CAhFT;;AAAA,SAiF5BE,qBAjF4B,GAiFJF,KAAK,IAAIvC,WAAW,CAAC,KAAK0C,kBAAL,CAAwBH,KAAxB,CAAD,CAjFhB;AAAA;;AAoB5BI,EAAAA,iBAAiB,GAAG;AAChB3C,IAAAA,WAAW,CAAC,KAAK4C,OAAL,EAAD,CAAX;AACH;;AAED,QAAMA,OAAN,GAAgB;AACZ,UAAM;AAAEzB,MAAAA,IAAF;AAAQC,MAAAA,eAAR;AAAyBC,MAAAA;AAAzB,QAAuC,MAAMpB,WAAW,EAA9D;AACA,UAAM;AAAEqB,MAAAA,WAAF;AAAeC,MAAAA,aAAf;AAA8BC,MAAAA,YAA9B;AAA4CC,MAAAA,SAA5C;AAAuDC,MAAAA,WAAvD;AAAoEC,MAAAA;AAApE,QAAmF,MAAMzB,qBAAqB,EAApH;AACA,SAAK2C,QAAL,CAAc;AAAE1B,MAAAA,IAAF;AACVC,MAAAA,eADU;AAEVC,MAAAA,SAFU;AAGVC,MAAAA,WAHU;AAIVC,MAAAA,aAJU;AAKVC,MAAAA,YALU;AAMVC,MAAAA,SANU;AAOVC,MAAAA,WAPU;AAQVC,MAAAA,UARU;AASVC,MAAAA,aAAa,EAAEH,SATL;AAUVI,MAAAA,cAAc,EAAEP;AAVN,KAAd;AAWH;;AAED,QAAMa,UAAN,GAAmB;AACf,SAAKU,QAAL,CAAc;AAAEb,MAAAA,gBAAgB,EAAE,IAApB;AAA0BC,MAAAA,kBAAkB,EAAE;AAA9C,KAAd;AACH;;AAED,QAAMI,YAAN,GAAqB;AACjB,SAAKQ,QAAL,CAAc;AAAEb,MAAAA,gBAAgB,EAAE,KAApB;AAA2BC,MAAAA,kBAAkB,EAAE;AAA/C,KAAd;AACH;;AAED,QAAMO,WAAN,CAAkBD,KAAlB,EAAyB;AACrB,QAAGA,KAAK,KAAK,MAAb,EAAoB;AAChB,YAAMO,IAAI,GAAG,KAAK5B,KAAL,CAAWO,SAAxB;AACA,WAAKoB,QAAL,CAAc;AAAEjB,QAAAA,aAAa,EAAEkB,IAAjB;AAAuBhB,QAAAA,WAAW,EAAES;AAApC,OAAd;AACH,KAHD,MAIK,IAAGA,KAAK,KAAK,QAAb,EAAsB;AACvB,YAAMO,IAAI,GAAG,KAAK5B,KAAL,CAAWQ,WAAxB;AACA,WAAKmB,QAAL,CAAc;AAAEjB,QAAAA,aAAa,EAAEkB,IAAjB;AAAuBhB,QAAAA,WAAW,EAAES;AAApC,OAAd;AACH,KAHI,MAIA,IAAGA,KAAK,KAAK,OAAb,EAAqB;AACtB,YAAMO,IAAI,GAAG,KAAK5B,KAAL,CAAWS,UAAxB;AACA,WAAKkB,QAAL,CAAc;AAAEjB,QAAAA,aAAa,EAAEkB,IAAjB;AAAuBhB,QAAAA,WAAW,EAAES;AAApC,OAAd;AACH;AACJ;;AAED,QAAMG,kBAAN,CAAyBH,KAAzB,EAAgC;AAC5B,QAAGA,KAAK,KAAK,aAAb,EAA2B;AACvB,YAAMO,IAAI,GAAG,KAAK5B,KAAL,CAAWI,WAAxB;AACA,WAAKuB,QAAL,CAAc;AAAEhB,QAAAA,cAAc,EAAEiB,IAAlB;AAAwBf,QAAAA,kBAAkB,EAAEQ;AAA5C,OAAd;AACH,KAHD,MAIK,IAAGA,KAAK,KAAK,eAAb,EAA6B;AAC9B,YAAMO,IAAI,GAAG,KAAK5B,KAAL,CAAWK,aAAxB;AACA,WAAKsB,QAAL,CAAc;AAAEhB,QAAAA,cAAc,EAAEiB,IAAlB;AAAwBf,QAAAA,kBAAkB,EAAEQ;AAA5C,OAAd;AACH,KAHI,MAIA,IAAGA,KAAK,KAAK,cAAb,EAA4B;AAC7B,YAAMO,IAAI,GAAG,KAAK5B,KAAL,CAAWM,YAAxB;AACA,WAAKqB,QAAL,CAAc;AAAEhB,QAAAA,cAAc,EAAEiB,IAAlB;AAAwBf,QAAAA,kBAAkB,EAAEQ;AAA5C,OAAd;AACH;AACJ;;AAODQ,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAE5B,MAAAA,IAAF;AACFC,MAAAA,eADE;AAEFC,MAAAA,SAFE;AAGFQ,MAAAA,cAHE;AAIFD,MAAAA,aAJE;AAKFE,MAAAA,WALE;AAMFC,MAAAA,kBANE;AAOFC,MAAAA,gBAPE;AAQFC,MAAAA;AARE,QAQoB,KAAKf,KAR/B;AAUA,UAAM8B,cAAc,GAAG3B,SAAS,GAAGA,SAAS,CAAC4B,KAAb,GAAqB,CAArD,CAZK,CAcL;AACA;AAEA;AACA;;AAEA,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,gBACM9B,IAAI,gBACF,QAAC,MAAD,CAAQ,GAAR;AAAY,QAAA,SAAS,EAAC,SAAtB;AACA,QAAA,QAAQ,EAAEhB,YADV;AAEA,QAAA,OAAO,EAAC,OAFR;AAGA,QAAA,OAAO,EAAC,IAHR;AAIA,QAAA,IAAI,EAAC,SAJL;AAKA,QAAA,UAAU,EAAEK,eALZ;AAAA,gCAMI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBACKW,IAAI,CAAC+B,MAAL,CAAYC,MAAZ,GAAqB,CAArB,gBACG;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,GAAG,EAAEhC,IAAI,CAAC+B,MAAL,CAAY,CAAZ,EAAeE,GAA5C;AAAiD,cAAA,GAAG,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,oBADH,gBAGG;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACI;AAAG,cAAA,IAAI,EAAEjC,IAAI,CAACkC,aAAL,CAAmBC,OAA5B;AAAqC,cAAA,MAAM,EAAC,QAA5C;AAAqD,cAAA,GAAG,EAAC,qBAAzD;AAAA,qCACI;AAAA,gCAAMnC,IAAI,CAACoC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAeI;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAA,0BAAKpC,IAAI,CAACqC,SAAL,CAAeP;AAApB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,sCACI;AAAA,0BAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACI;AAAA,0BAAK5B,eAAe,CAACqC,OAAhB,CAAwBR;AAA7B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAoCI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC,sBAAvB;AACA,gBAAA,QAAQ,EAAEjB,gBADV;AAEA,gBAAA,OAAO,EAAE,MAAM,KAAKE,YAAL,CAAkB,OAAlB,CAFf;AAAA,uCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC,wBAAvB;AACA,gBAAA,QAAQ,EAAED,kBADV;AAEA,gBAAA,OAAO,EAAE,MAAM,KAAKG,cAAL,CAAoB,SAApB,CAFf;AAAA,uCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAiBI;AAAK,YAAA,SAAS,EAAC,WAAf;AACA,YAAA,KAAK,EAAEJ,gBAAgB,GAAG,MAAH,GAAY,MADnC;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,QAAf;AAAA,wCACI,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,wBAAvB;AACA,kBAAA,QAAQ,EAAEF,WAAW,KAAK,MAD1B;AAEA,kBAAA,OAAO,EAAE,MAAM,KAAKQ,cAAL,CAAoB,MAApB,CAFf;AAAA,yCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,wBAAvB;AACA,kBAAA,QAAQ,EAAER,WAAW,KAAK,QAD1B;AAEA,kBAAA,OAAO,EAAE,MAAM,KAAKQ,cAAL,CAAoB,QAApB,CAFf;AAAA,yCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBANJ,eAWI,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,wBAAvB;AACA,kBAAA,QAAQ,EAAER,WAAW,KAAK,OAD1B;AAEA,kBAAA,OAAO,EAAE,MAAM,KAAKQ,cAAL,CAAoB,OAApB,CAFf;AAAA,yCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAsBI;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA,wBACKV,aAAa,GACVA,aAAa,CAAC8B,KAAd,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBACxB;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,aAAf;AAA6B,kBAAA,GAAG,EAAED,IAAI,CAACE,KAAL,CAAWZ,MAAX,CAAkB,CAAlB,EAAqBE,GAAvD;AAA4D,kBAAA,GAAG,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,2CACI;AAAG,sBAAA,IAAI,EAAEQ,IAAI,CAACP,aAAL,CAAmBC,OAA5B;AAAqC,sBAAA,MAAM,EAAC,QAA5C;AAAqD,sBAAA,GAAG,EAAC,qBAAzD;AAAA,6CACI;AAAI,wBAAA,SAAS,EAAC,YAAd;AAAA,kCAA4BM,IAAI,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAMI;AAAK,oBAAA,SAAS,EAAC,SAAf;AAAA,8BACKH,IAAI,CAACH,OAAL,CAAaE,GAAb,CAAiB,CAACK,MAAD,EAASH,KAAT,kBACd;AAAA,sCAAkBG,MAAM,CAACD,IAAzB;AAAA,uBAASF,KAAT;AAAA;AAAA;AAAA;AAAA,4BADH;AADL;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA,iBAASA,KAAT;AAAA;AAAA;AAAA;AAAA,sBADA,CADU,gBAkBV,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAnBR;AAAA;AAAA;AAAA;AAAA,oBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eA8DI;AAAK,YAAA,SAAS,EAAC,aAAf;AACA,YAAA,KAAK,EAAE5B,kBAAkB,GAAG,MAAH,GAAY,MADrC;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,sBAAf;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAK,gBAAA,SAAS,EAAC,QAAf;AAAA,wCACI,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,0BAAvB;AACA,kBAAA,QAAQ,EAAEF,kBAAkB,KAAK,aADjC;AAEA,kBAAA,OAAO,EAAE,MAAM,KAAKU,qBAAL,CAA2B,aAA3B,CAFf;AAAA,yCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,0BAAvB;AACA,kBAAA,QAAQ,EAAEV,kBAAkB,KAAK,eADjC;AAEA,kBAAA,OAAO,EAAE,MAAM,KAAKU,qBAAL,CAA2B,eAA3B,CAFf;AAAA,yCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBANJ,eAWI,QAAC,WAAD;AAAa,kBAAA,SAAS,EAAC,0BAAvB;AACA,kBAAA,QAAQ,EAAEV,kBAAkB,KAAK,cADjC;AAEA,kBAAA,OAAO,EAAE,MAAM,KAAKU,qBAAL,CAA2B,cAA3B,CAFf;AAAA,yCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,wBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAsBI;AAAI,cAAA,SAAS,EAAC,SAAd;AAAA,wBACKZ,cAAc,GACXA,cAAc,CAAC6B,KAAf,CAAqBC,GAArB,CAAyB,CAACK,MAAD,EAASH,KAAT,kBACzB;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,iBAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,eAAf;AAA+B,oBAAA,GAAG,EAAEG,MAAM,CAACd,MAAP,CAAc,CAAd,EAAiBE,GAArD;AAA0D,oBAAA,GAAG,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,aAAb;AAA2B,oBAAA,IAAI,EAAEY,MAAM,CAACC,IAAxC;AAA8C,oBAAA,MAAM,EAAC,QAArD;AAA8D,oBAAA,GAAG,EAAC,qBAAlE;AAAA,2CACI;AAAA,sCAAMD,MAAM,CAACD,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,yCACI;AAAA,6DAAiB;AAAA,gCAAOC,MAAM,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,4BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA,iBAASL,KAAT;AAAA;AAAA;AAAA;AAAA,sBADA,CADW,gBAcX,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAfR;AAAA;AAAA;AAAA;AAAA,oBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9DJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,gBA+IF,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAhJR;AAAA;AAAA;AAAA;AAAA,YADJ;AAqJH;;AA5P2B;;AA+PhC,eAAe5C,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport Loader from './Loader';\nimport { motion } from 'framer-motion';\nimport { catchErrors } from '../utils';\nimport { getUserInfo, getTopSongsAndArtists} from '../spotify';\n\nimport styled from 'styled-components/macro';\nimport '../styles/Profile.scss';\n\nconst pageVariants = { \n    in:{ \n        y: [\"100vh\", \"100vh\", \"0vh\", \"0vh\"],\n    },\n    notIn: {\n        y: \"100vh\",\n    },\n    outDown: {\n        y: [\"0vh\", \"0vh\", \"100vh\"],\n    }\n}\n\nconst pageTransitions = { \n    type: \"tween\",\n    ease: \"easeInOut\",\n    duration: 0.75,\n}\n\nconst RangeButton = styled.button`\n    background-color: transparent;\n    color: ${props => (props.isActive ? '#f0f0f0' : '#999999')};\n    font-size: 18px;\n    font-weight: 500;\n    margin: 0rem 0.5rem;\n    outline: none;\n    border: none;\n\n    span {\n        padding-bottom: 2px;\n        border-bottom: 1px solid ${props => (props.isActive ? '#f0f0f0' : `transparent`)};\n        line-height: 1.5;\n        white-space: nowrap;\n    }\n`;\n\nclass Profile extends Component {\n\n    state = {\n        user: null,\n        followedArtists: null,\n        playlists: null,\n        artistsLong: null, \n        artistsMedium: null, \n        artistsShort: null, \n        songsLong: null, \n        songsMedium: null, \n        songsShort: null,\n        topTracksData: null,\n        topArtistsData: null,\n        activeRange: 'long',\n        artistsActiveRange: 'artistsMedium',\n        makeSongsVisible: true,\n        makeArtistsVisible: false,\n    };\n\n    componentDidMount() {\n        catchErrors(this.getData());\n    }\n\n    async getData() {\n        const { user, followedArtists, playlists } = await getUserInfo();\n        const { artistsLong, artistsMedium, artistsShort, songsLong, songsMedium, songsShort } = await getTopSongsAndArtists();\n        this.setState({ user, \n            followedArtists, \n            playlists, \n            artistsLong, \n            artistsMedium, \n            artistsShort, \n            songsLong, \n            songsMedium, \n            songsShort, \n            topTracksData: songsLong,\n            topArtistsData: artistsLong});\n    }\n\n    async toSongsTab() {\n        this.setState({ makeSongsVisible: true, makeArtistsVisible: false })\n    }\n\n    async toArtistsTab() {\n        this.setState({ makeSongsVisible: false, makeArtistsVisible: true })\n    }\n\n    async changeRange(range) {\n        if(range === 'long'){\n            const data = this.state.songsLong;\n            this.setState({ topTracksData: data, activeRange: range });\n        }\n        else if(range === 'medium'){\n            const data = this.state.songsMedium;\n            this.setState({ topTracksData: data, activeRange: range });\n        }\n        else if(range === 'short'){\n            const data = this.state.songsShort;\n            this.setState({ topTracksData: data, activeRange: range });\n        }\n    }\n\n    async changeRangeArtists(range) {\n        if(range === 'artistsLong'){\n            const data = this.state.artistsLong;\n            this.setState({ topArtistsData: data, artistsActiveRange: range });\n        }\n        else if(range === 'artistsMedium'){\n            const data = this.state.artistsMedium;\n            this.setState({ topArtistsData: data, artistsActiveRange: range });\n        }\n        else if(range === 'artistsShort'){\n            const data = this.state.artistsShort;\n            this.setState({ topArtistsData: data, artistsActiveRange: range });\n        }\n    }\n\n    viewSongsTab = () => catchErrors(this.toSongsTab());\n    viewArtistsTab = () => catchErrors(this.toArtistsTab());\n    setActiveRange = range => catchErrors(this.changeRange(range));\n    setActiveRangeArtists = range => catchErrors(this.changeRangeArtists(range));\n\n    render() {\n\n        const { user, \n            followedArtists, \n            playlists, \n            topArtistsData, \n            topTracksData,  \n            activeRange,\n            artistsActiveRange,\n            makeSongsVisible,\n            makeArtistsVisible} = this.state;\n            \n        const totalPlaylists = playlists ? playlists.total : 0;\n\n        // const tabForSongsVisibilityTest = makeSongsVisible ? 'show' : 'hide';\n        // console.log('What to do with top songs div?', tabForSongsVisibilityTest);\n        \n        // const tabForArtistsVisibilityTest = makeArtistsVisible ? 'show' : 'hide';\n        // console.log('What to do with top artists div?', tabForArtistsVisibilityTest);\n\n        return (\n            <React.Fragment>\n                { user ? (\n                    <motion.div className=\"profile\"\n                    variants={pageVariants}\n                    initial=\"notIn\"\n                    animate=\"in\"\n                    exit=\"outDown\"\n                    transition={pageTransitions}>\n                        <div className=\"header-container\">\n                            <div className=\"avatar-container\">\n                                {user.images.length > 0 ? (\n                                    <img className=\"avatar\" src={user.images[0].url} alt=\"avatar\" />\n                                ) : (\n                                    <div className=\"avatar\">\n                                        <h1> NO AVATAR </h1>\n                                    </div>\n                                )}\n                            </div>\n                            <div className=\"account-name\"> \n                                <a href={user.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <h1> {user.display_name} </h1>\n                                </a> \n                            </div>\n                            <div className=\"account-stats\">\n                                <div className=\"followers\">\n                                    <h2>{user.followers.total}</h2>\n                                    <h3>Followers</h3>\n                                </div>\n                                <div className=\"number-of-playlists\">\n                                    <h2>{totalPlaylists}</h2>\n                                    <h3>Playists</h3>\n                                </div>\n                                <div className=\"following\">\n                                    <h2>{followedArtists.artists.total}</h2>\n                                    <h3>Following</h3>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"body-container\">\n                            <div className=\"choice-container\">\n                                <div className=\"top-songs-button\">\n                                    <RangeButton className=\"top-songs-tab-button\"\n                                    isActive={makeSongsVisible}\n                                    onClick={() => this.viewSongsTab('songs')}>\n                                        <span>Top Songs</span>\n                                    </RangeButton>\n                                </div>\n                                <div className=\"top-artist-button\">\n                                    <RangeButton className=\"top-artists-tab-button\"\n                                    isActive={makeArtistsVisible}\n                                    onClick={() => this.viewArtistsTab('artists')}>\n                                        <span>Top Artists</span>\n                                    </RangeButton>\n                                </div>\n                            </div>\n                            <div className=\"top-songs\" \n                            value={makeSongsVisible ? 'show' : 'hide'}>\n                                <div className=\"header-for-top-lists\">\n                                    <h1>Top Songs</h1>\n                                    <div className=\"ranges\">\n                                        <RangeButton className=\"range-button-top-songs\"\n                                        isActive={activeRange === 'long'}\n                                        onClick={() => this.setActiveRange('long')}>\n                                            <span>All Time</span>\n                                        </RangeButton>\n                                        <RangeButton className=\"range-button-top-songs\"\n                                        isActive={activeRange === 'medium'}\n                                        onClick={() => this.setActiveRange('medium')}>\n                                            <span>Last 6 Months</span>\n                                        </RangeButton>\n                                        <RangeButton className=\"range-button-top-songs\"\n                                        isActive={activeRange === 'short'}\n                                        onClick={() => this.setActiveRange('short')}>\n                                            <span>Last Month</span>\n                                        </RangeButton>\n                                    </div>\n                                </div>\n                                <ul className=\"songs\">\n                                    {topTracksData ? (\n                                        topTracksData.items.map((song, index) => \n                                        <li key={index}> \n                                            <img className=\"album-cover\" src={song.album.images[2].url} alt=\"album-cover\"/> \n                                            <div className=\"title-and-artist\">\n                                                <div className=\"song\">\n                                                    <a href={song.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                        <h2 className=\"song-title\">{song.name}</h2>\n                                                    </a>\n                                                </div>\n                                                <div className=\"artists\">\n                                                    {song.artists.map((artist, index) => (\n                                                        <h3 key={index}> {artist.name} </h3>\n                                                    ))}\n                                                </div>\n                                            </div>\n                                        </li>\n                                    )) : (\n                                        <Loader />\n                                    )}\n                                </ul>     \n                            </div>\n                            <div className=\"top-artists\"\n                            value={makeArtistsVisible ? 'show' : 'hide'}>\n                                <div className=\"header-for-top-lists\">\n                                    <h1>Top Artists</h1>\n                                    <div className=\"ranges\">\n                                        <RangeButton className=\"range-button-top-artists\"\n                                        isActive={artistsActiveRange === 'artistsLong'}\n                                        onClick={() => this.setActiveRangeArtists('artistsLong')}>\n                                            <span>All Time</span>\n                                        </RangeButton>\n                                        <RangeButton className=\"range-button-top-artists\"\n                                        isActive={artistsActiveRange === 'artistsMedium'}\n                                        onClick={() => this.setActiveRangeArtists('artistsMedium')}>\n                                            <span>Last 6 Months</span>\n                                        </RangeButton>\n                                        <RangeButton className=\"range-button-top-artists\"\n                                        isActive={artistsActiveRange === 'artistsShort'}\n                                        onClick={() => this.setActiveRangeArtists('artistsShort')}>\n                                            <span>Last Month</span>\n                                        </RangeButton>\n                                    </div>\n                                </div>\n                                <ul className=\"artists\">\n                                    {topArtistsData ? (\n                                        topArtistsData.items.map((artist, index) => \n                                        <li key={index}> \n                                            <div className=\"avatar-and-name\">\n                                                <img className=\"artist-avatar\" src={artist.images[2].url} alt=\"artist-avatar\"/> \n                                                <a className=\"artist-name\" href={artist.href} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                    <h1> {artist.name} </h1>\n                                                </a>\n                                            </div>\n                                            <div className=\"popularity\">\n                                                <h1>Popularity - <span>{artist.popularity}</span></h1>\n                                            </div>\n                                        </li>\n                                    )) : (\n                                        <Loader />\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    </motion.div>\n                ) : (\n                    <Loader />\n                )} \n            </React.Fragment>\n        )\n    }\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}